I"n<h1 class="no_toc" id="developer-documentation">Developer documentation</h1>

<h2 class="no_toc" id="table-of-contents">Table of contents</h2>

<ul id="markdown-toc">
  <li><a href="#a-couple-remarks" id="markdown-toc-a-couple-remarks">A couple remarks</a></li>
  <li><a href="#installing-and-building" id="markdown-toc-installing-and-building">Installing and Building</a></li>
  <li><a href="#structure" id="markdown-toc-structure">Structure</a>    <ul>
      <li><a href="#main-process" id="markdown-toc-main-process">Main Process</a></li>
      <li><a href="#renderer-process" id="markdown-toc-renderer-process">Renderer Process</a></li>
    </ul>
  </li>
</ul>

<h2 id="a-couple-remarks">A couple remarks</h2>

<p>I’m not a seasoned programmer. In fact, my journey in programming started about two years ago, in a somewhat unstable way. A couple courses, YouTube videos, etc. Therefore, my code isn’t great. You should expect to find some errors, and a lot of bad practices. I have, though, made some effort to write clean and understandable code, forcing myself to write a lot of comments (to many?) and to make a structured project (actually the first complete one).</p>

<p>This explains how this project came to be. Given that I’m inexperienced, I would appreciate any kind of feedback: pull requests, issues, comments or just a thumbs-up!</p>

<p>I hope you get as exited with this project as I did.</p>

<p><em>Final note: My English isn’t great.</em></p>

<p>M7kra</p>

<h2 id="installing-and-building">Installing and Building</h2>

<p>In order to download the source code, run the following command:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/m7kra/UpNext.git
npm <span class="nb">install</span>
</code></pre></div></div>

<p>You may then build with <code class="language-plaintext highlighter-rouge">npm run package</code>.</p>

<h2 id="structure">Structure</h2>

<p>This app is based on <a href="https://www.electronjs.org/">Electron</a> and <a href="https://reactjs.org/">React</a>, put together with <a href="https://electron-react-boilerplate.js.org/">Electron React Boilerplate</a>. Following the structure defined by Electron React Boilerplate, the app is divided into two processes: main, which deals with databases, settings and getting the app up and running, and renderer, responsible for the UI and music playback. The two processes communicate using Electron’s <a href="https://www.electronjs.org/docs/latest/tutorial/ipc">IPC</a> (Inter-Process Communication).</p>

<h3 id="main-process">Main Process</h3>

<p>Part of the program that interacts with the file system (creating a database, storing settings and covers) and with the OS (creating and destroying windows, resizing them, etc.).</p>

<p>Two helper modules are defined:</p>

<ul>
  <li>
    <p><a href="/Musicly/docs/dev/settings"><code class="language-plaintext highlighter-rouge">Settings</code></a>: Gets and sets the user settings.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">utilities</code>: Provides utilities for window management.</p>
  </li>
</ul>

<p>These are managed by the <a href="./dev/main"><code class="language-plaintext highlighter-rouge">main.js</code></a> script which also handles <code class="language-plaintext highlighter-rouge">ipcMain</code> events.</p>

<h3 id="renderer-process">Renderer Process</h3>

<p>Part of the program that displays the UI and manages the music playback. The helper modules and components were designed with a VMC structure in mind. I suspect, however, that this failed :). These are its different pieces:</p>

<ul>
  <li>
    <p><a href="./dev/events"><code class="language-plaintext highlighter-rouge">Events</code></a>: A helper module that eases sending and handling of events within the app.</p>
  </li>
  <li>
    <p><a href="./dev/shortcuts"><code class="language-plaintext highlighter-rouge">Shortcuts</code></a>: A helper module that allows to easily set up and remove app shortcuts.</p>
  </li>
  <li>
    <p><a href="./dev/controller"><code class="language-plaintext highlighter-rouge">Controller</code></a>: The working horse of the renderer process, this module communicates with the main process, manages music playback and the application’s state.</p>
  </li>
  <li>
    <p><a href="./dev/components"><code class="language-plaintext highlighter-rouge">Components</code></a>: A bunch of React functional components, of which <code class="language-plaintext highlighter-rouge">App</code> is the main one, rendering all the others and calling the <code class="language-plaintext highlighter-rouge">Controller</code>.</p>
  </li>
</ul>
:ET